// <auto-generated />
using System;
using Expenses.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Expenses.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ExpensesDbContext))]
    [Migration("20230428164204_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("EXPN")
                .HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Expenses.Domain.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Account", "EXPN");
                });

            modelBuilder.Entity("Expenses.Domain.ExpenseGroups.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Expenses", "EXPN");
                });

            modelBuilder.Entity("Expenses.Domain.ExpenseGroups.ExpenseGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ExpenseAccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExpenseGroups", "EXPN");
                });

            modelBuilder.Entity("Expenses.Domain.ExpenseGroups.Expense", b =>
                {
                    b.HasOne("Expenses.Domain.ExpenseGroups.ExpenseGroup", null)
                        .WithMany("Expenses")
                        .HasForeignKey("GroupId");

                    b.OwnsOne("SharedKernel.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("ExpenseId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasColumnName("Currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18, 2)")
                                .HasColumnName("Amount");

                            b1.HasKey("ExpenseId");

                            b1.ToTable("Expenses", "EXPN");

                            b1.WithOwner()
                                .HasForeignKey("ExpenseId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();
                });

            modelBuilder.Entity("Expenses.Domain.ExpenseGroups.ExpenseGroup", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
